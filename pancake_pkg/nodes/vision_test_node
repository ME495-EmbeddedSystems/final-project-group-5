#!/usr/bin/env python

import rospy
from cv_bridge import CvBridge, CvBridgeError
from sensor_msgs.msg import Image, CompressedImage
import numpy as np
import cv2



class ImageProcessing:

    def __init__(self):
        rospy.init_node('vision_test_node',anonymous=True)
        rospy.logerr("started the node")
        rospy.Subscriber("/camera/aligned_depth_to_color/image_raw", Image, callback=self.convert_depth_image, queue_size=1)
        
        rospy.Subscriber("/camera/color/image_raw", Image, callback=self.convert_color_image, queue_size=1)

        #rospy.Subscriber("/camera/aligned_depth_to_color/image_raw", Image, callback=self.convert_depth_image, queue_size=1)
        rospy.logerr('subscribed')

    def show_video(self,ros_image):
        cv2.imshow("test",ros_image)
        cv2.waitKey(3)

    def convert_depth_image(self,ros_image):
        bridge = CvBridge()
        # Use cv_bridge() to convert the ROS image to OpenCV format
        try:
            depth_image = bridge.imgmsg_to_cv2(ros_image)
            depth_array = np.array(depth_image, dtype=np.float32)
            rospy.logerr(depth_array[240][424])
            self.show_video(depth_image)


        except CvBridgeError:
            print(CvBridgeError())
            rospy.logerr("bad")


    def convert_color_image(self,ros_image):
        bridge = CvBridge()
        try:
            color_image = bridge.imgmsg_to_cv2(ros_image)
            color_array = np.array(color_image, dtype=np.float32)
            self.show_video(color_image)

        except CvBridgeError:
            print(CvBridgeError())
            rospy.logerr("bad")
        
    
    #Convert the depth image to a Numpy array

if __name__ == '__main__':
    ImageProcessing()
    rospy.spin()